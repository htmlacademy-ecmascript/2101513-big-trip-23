{"version":3,"file":"bundle.94a71fe37ffb806d03ac.js","mappings":"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","sources":["webpack://big-trip/./src/render.js","webpack://big-trip/./src/constants.js","webpack://big-trip/./src/utils.js","webpack://big-trip/./src/view/filters.js","webpack://big-trip/./src/view/sorting.js","webpack://big-trip/./src/view/route-point.js","webpack://big-trip/./src/view/routes-list.js","webpack://big-trip/./src/view/event-types.js","webpack://big-trip/./src/view/event-offers.js","webpack://big-trip/./src/view/event-destination-control.js","webpack://big-trip/./src/view/event-destination.js","webpack://big-trip/./src/mocks.js","webpack://big-trip/./src/view/form-creating.js","webpack://big-trip/./src/view/form-editing.js","webpack://big-trip/./src/main.js","webpack://big-trip/./src/presenter/general-presenter.js"],"sourcesContent":["const RenderPosition = {\n  BEFOREBEGIN: 'beforebegin',\n  AFTERBEGIN: 'afterbegin',\n  BEFOREEND: 'beforeend',\n  AFTEREND: 'afterend',\n};\n\nfunction createElement(template) {\n  const newElement = document.createElement('div');\n  newElement.innerHTML = template;\n\n  return newElement.firstElementChild;\n}\n\nfunction render(component, container, place = RenderPosition.BEFOREEND) {\n  container.insertAdjacentElement(place, component.getElement());\n}\n\nexport {RenderPosition, createElement, render};\n","const FILTER_TYPES = [\n  {\n    value: 'everything',\n    isChecked: true\n  },\n  {\n    value: 'future'\n  },\n  {\n    value: 'present'\n  },\n  {\n    value: 'past'\n  }\n];\n\nconst SORTING_TYPES = [\n  {\n    value: 'day',\n    isActive: true,\n    isChecked: true\n  },\n  {\n    value: 'event',\n    isActive: false\n  },\n  {\n    value: 'time',\n    isActive: true\n  },\n  {\n    value: 'price',\n    isActive: true\n  },\n  {\n    value: 'offer',\n    title: 'offers',\n    isActive: false\n  }\n];\n\nconst EVENT_TYPES = [\n  {\n    value: 'taxi'\n  },\n  {\n    value: 'bus'\n  },\n  {\n    value: 'train'\n  },\n  {\n    value: 'ship'\n  },\n  {\n    value: 'flight',\n    isChecked: true\n  },\n  {\n    value: 'check-in'\n  },\n  {\n    value: 'sightseeing'\n  },\n  {\n    value: 'restaurant'\n  }\n];\n\nconst DESTINATION_POINTS = ['Amsterdam', 'Geneva'];\n\nexport {\n  FILTER_TYPES,\n  SORTING_TYPES,\n  EVENT_TYPES,\n  DESTINATION_POINTS\n};\n","const getWordWithCapitalLetter = (word) => `${word.charAt(0).toUpperCase()}${word.slice(1)}`;\n\nexport {\n  getWordWithCapitalLetter\n};\n","import {createElement} from '../render';\nimport {FILTER_TYPES} from '../constants';\nimport {getWordWithCapitalLetter} from '../utils';\n\nconst getFiltersItemTemplate = ({value, isChecked}) => `\n    <div class=\"trip-filters__filter\">\n      <input id=\"filter-${value}\"\n             class=\"trip-filters__filter-input  visually-hidden\"\n             value=\"${value}\"\n             type=\"radio\"\n             name=\"trip-filter\"\n             ${isChecked ? 'checked' : ''}\n      >\n      <label class=\"trip-filters__filter-label\" for=\"filter-${value}\">${getWordWithCapitalLetter(value)}</label>\n    </div>\n`;\n\nconst getFiltersTemplate = () => `\n  <form class=\"trip-filters\" action=\"#\" method=\"get\">\n\n    ${FILTER_TYPES.map((type) => getFiltersItemTemplate(type)).join('')}\n\n    <button class=\"visually-hidden\" type=\"submit\">Accept filter</button>\n  </form>\n`;\n\nexport default class Filters {\n  getTemplate() {\n    return getFiltersTemplate();\n  }\n\n  getElement() {\n    if (!this.elem) {\n      this.elem = createElement(this.getTemplate());\n    }\n    return this.elem;\n  }\n\n  removeElement() {\n    this.elem = null;\n  }\n}\n","import {createElement} from '../render';\nimport {SORTING_TYPES} from '../constants';\nimport {getWordWithCapitalLetter} from '../utils';\n\nconst getSortingItemTemplate = ({value, title, isActive, isChecked}) => `\n  <div class=\"trip-sort__item  trip-sort__item--${value}\">\n    <input id=\"sort-${value}\"\n           class=\"trip-sort__input  visually-hidden\"\n           value=\"sort-${value}\"\n           type=\"radio\"\n           name=\"trip-sort\"\n           ${isChecked ? 'checked' : ''}\n           ${!isActive ? 'disabled' : ''}\n    >\n    <label class=\"trip-sort__btn\" for=\"sort-${value}\">${title ? getWordWithCapitalLetter(title) : getWordWithCapitalLetter(value)}</label>\n  </div>\n`;\n\nconst getSortingTemplate = () => `\n  <form class=\"trip-events__trip-sort  trip-sort\" action=\"#\" method=\"get\">\n\n    ${SORTING_TYPES.map((type) => getSortingItemTemplate(type)).join('')}\n\n  </form>\n`;\n\nexport default class Sorting {\n  getTemplate() {\n    return getSortingTemplate();\n  }\n\n  getElement() {\n    if (!this.elem) {\n      this.elem = createElement(this.getTemplate());\n    }\n    return this.elem;\n  }\n\n  removeElement() {\n    this.elem = null;\n  }\n}\n","import {createElement} from '../render';\n\nconst getRoutePointTemplate = () => `\n  <li class=\"trip-events__item\">\n    <div class=\"event\">\n      <time class=\"event__date\" datetime=\"2019-03-18\">MAR 18</time>\n      <div class=\"event__type\">\n        <img class=\"event__type-icon\" width=\"42\" height=\"42\" src=\"img/icons/taxi.png\" alt=\"Event type icon\">\n      </div>\n      <h3 class=\"event__title\">Taxi Amsterdam</h3>\n      <div class=\"event__schedule\">\n        <p class=\"event__time\">\n          <time class=\"event__start-time\" datetime=\"2019-03-18T10:30\">10:30</time>\n          &mdash;\n          <time class=\"event__end-time\" datetime=\"2019-03-18T11:00\">11:00</time>\n        </p>\n        <p class=\"event__duration\">30M</p>\n      </div>\n      <p class=\"event__price\">\n        &euro;&nbsp;<span class=\"event__price-value\">20</span>\n      </p>\n      <h4 class=\"visually-hidden\">Offers:</h4>\n      <ul class=\"event__selected-offers\">\n        <li class=\"event__offer\">\n          <span class=\"event__offer-title\">Order Uber</span>\n          &plus;&euro;&nbsp;\n          <span class=\"event__offer-price\">20</span>\n        </li>\n      </ul>\n      <button class=\"event__favorite-btn event__favorite-btn--active\" type=\"button\">\n        <span class=\"visually-hidden\">Add to favorite</span>\n        <svg class=\"event__favorite-icon\" width=\"28\" height=\"28\" viewBox=\"0 0 28 28\">\n          <path d=\"M14 21l-8.22899 4.3262 1.57159-9.1631L.685209 9.67376 9.8855 8.33688 14 0l4.1145 8.33688 9.2003 1.33688-6.6574 6.48934 1.5716 9.1631L14 21z\"/>\n        </svg>\n      </button>\n      <button class=\"event__rollup-btn\" type=\"button\">\n        <span class=\"visually-hidden\">Open event</span>\n      </button>\n    </div>\n  </li>\n`;\n\nexport default class RoutePoint {\n  getTemplate() {\n    return getRoutePointTemplate();\n  }\n\n  getElement() {\n    if (!this.elem) {\n      this.elem = createElement(this.getTemplate());\n    }\n    return this.elem;\n  }\n\n  removeElement() {\n    this.elem = null;\n  }\n}\n","import {createElement} from '../render';\n\nconst getRoutePointListTemplate = () => `\n    <ul class=\"trip-events__list\"></ul>\n`;\n\nexport default class RoutesList {\n  getTemplate() {\n    return getRoutePointListTemplate();\n  }\n\n  getElement() {\n    if (!this.element) {\n      this.element = createElement(this.getTemplate());\n    }\n\n    return this.element;\n  }\n\n  removeElement() {\n    this.element = null;\n  }\n}\n","import {EVENT_TYPES} from '../constants';\nimport {createElement} from '../render';\nimport {getWordWithCapitalLetter} from '../utils';\n\nconst getEventsTypesItemTemplate = ({value, isChecked}) => `\n  <div class=\"event__type-item\">\n    <input id=\"event-type-${value}-1\"\n           class=\"event__type-input  visually-hidden\"\n           value=\"${value}\"\n           type=\"radio\"\n           name=\"event-type\"\n           ${isChecked ? 'checked' : ''}\n    >\n    <label class=\"event__type-label  event__type-label--${value}\" for=\"event-type-${value}-1\">${getWordWithCapitalLetter(value)}</label>\n  </div>\n`;\n\nconst getEventsTypesTemplate = () => `\n  <div class=\"event__type-wrapper\">\n    <label class=\"event__type  event__type-btn\" for=\"event-type-toggle-1\">\n    <span class=\"visually-hidden\">Choose event type</span>\n    <img class=\"event__type-icon\" width=\"17\" height=\"17\" src=\"img/icons/flight.png\" alt=\"Event type icon\">\n    </label>\n    <input class=\"event__type-toggle  visually-hidden\" id=\"event-type-toggle-1\" type=\"checkbox\">\n\n    <div class=\"event__type-list\">\n      <fieldset class=\"event__type-group\">\n      <legend class=\"visually-hidden\">Event type</legend>\n\n      ${EVENT_TYPES.map((type) => getEventsTypesItemTemplate(type)).join('')}\n\n      </fieldset>\n    </div>\n  </div>\n`;\n\nexport default class EventTypes {\n  getTemplate() {\n    return getEventsTypesTemplate();\n  }\n\n  getElement() {\n    if (!this.elem) {\n      this.elem = createElement(this.getTemplate());\n    }\n    return this.elem;\n  }\n\n  removeElement() {\n    this.elem = null;\n  }\n}\n","import {createElement} from '../render';\n\nconst getEventOffersItemTemplate = ({value, title, price, isChecked}) => `\n  <div class=\"event__offer-selector\">\n    <input id=\"event-offer-${value}-1\"\n           class=\"event__offer-checkbox  visually-hidden\"\n           type=\"checkbox\"\n           name=\"event-offer-${value}\"\n           ${isChecked ? 'checked' : ''}\n    >\n    <label class=\"event__offer-label\" for=\"event-offer-${value}-1\">\n      <span class=\"event__offer-title\">${title}</span>\n      &plus;&euro;&nbsp;\n      <span class=\"event__offer-price\">${price}</span>\n    </label>\n  </div>\n`;\nconst getEventOffersTemplate = (services) => `\n    <section class=\"event__section  event__section--offers\">\n        <h3 class=\"event__section-title  event__section-title--offers\">Offers</h3>\n\n        <div class=\"event__available-offers\">\n\n            ${services.map((service) => getEventOffersItemTemplate(service)).join('')}\n\n        </div>\n  </section>\n`;\n\nexport default class EventOffers {\n  constructor({services}) {\n    this.services = services || [];\n  }\n\n  getTemplate() {\n    return getEventOffersTemplate(this.services);\n  }\n\n  getElement() {\n    if (!this.elem) {\n      this.elem = createElement(this.getTemplate());\n    }\n    return this.elem;\n  }\n\n  removeElement() {\n    this.elem = null;\n  }\n}\n","import {DESTINATION_POINTS} from '../constants';\nimport {createElement} from '../render';\n\nconst getDestinationOptionTemplate = (point) => `\n    <option value=\"${point}\">${point}</option>\n`;\n\nconst getDestinationControlTemplate = () => `\n  <div class=\"event__field-group  event__field-group--destination\">\n    <label class=\"event__label  event__type-output\" for=\"event-destination-1\">\n      Flight\n    </label>\n    <input class=\"event__input  event__input--destination\" id=\"event-destination-1\" type=\"text\" name=\"event-destination\" value=\"Geneva\" list=\"destination-list-1\">\n    <datalist id=\"destination-list-1\">\n\n        ${DESTINATION_POINTS.map((point) => getDestinationOptionTemplate(point)).join('')}\n\n    </datalist>\n  </div>\n`;\n\nexport default class EventDestinationControl {\n  getTemplate() {\n    return getDestinationControlTemplate();\n  }\n\n  getElement() {\n    if (!this.elem) {\n      this.elem = createElement(this.getTemplate());\n    }\n    return this.elem;\n  }\n\n  removeElement() {\n    this.elem = null;\n  }\n}\n","import {createElement} from '../render';\n\nconst getEventDestinationTemplate = (description, gallery) => `\n  <section class=\"event__section  event__section--destination\">\n    <h3 class=\"event__section-title  event__section-title--destination\">Destination</h3>\n    <p class=\"event__destination-description\">${description}</p>\n\n    ${gallery.length ? `\n      <div class=\"event__photos-container\">\n        <div class=\"event__photos-tape\">\n\n          ${gallery.map(({src, alt}) => `<img class=\"event__photo\" src=\"${src}\" alt=\"${alt}\">`).join('')}\n\n        </div>\n      </div>\n    ` : ''}\n  </section>\n`;\n\nexport default class EventDestination {\n  constructor({description, gallery}) {\n    this.description = description || '';\n    this.gallery = gallery || [];\n  }\n\n  getTemplate() {\n    return getEventDestinationTemplate(this.description, this.gallery);\n  }\n\n  getElement() {\n    if (!this.elem) {\n      this.elem = createElement(this.getTemplate());\n    }\n    return this.elem;\n  }\n\n  removeElement() {\n    this.elem = null;\n  }\n}\n","const destinationGallery = [\n  {\n    src: 'img/photos/1.jpg'\n  }\n  ,\n  {\n    src: 'img/photos/2.jpg'\n  }\n  ,\n  {\n    src: 'img/photos/3.jpg'\n  }\n  ,\n  {\n    src: 'img/photos/4.jpg'\n  }\n  ,\n  {\n    src: 'img/photos/5.jpg'\n  }\n];\n\nconst extraServices = [\n  {\n    value: 'luggage',\n    title: 'Add luggage',\n    price: 50,\n    isChecked: true\n  },\n  {\n    value: 'comfort',\n    title: 'Switch to comfort class',\n    price: 80,\n    isChecked: true\n  },\n  {\n    value: 'meal',\n    title: 'Add meal',\n    price: 15\n  },\n  {\n    value: 'seats',\n    title: 'Choose seats',\n    price: 5\n  },\n  {\n    value: 'train',\n    title: 'Travel by train',\n    price: 40\n  }\n];\n\nconst destinationDescription = 'Chamonix-Mont-Blanc (usually shortened to Chamonix) is a resort area near the junction of France, Switzerland and Italy. At the base of Mont Blanc, the highest summit in the Alps, it\\'s renowned for its skiing.';\n\nexport {\n  destinationGallery,\n  destinationDescription,\n  extraServices\n};\n","import EventTypes from './event-types';\nimport EventOffers from './event-offers';\nimport EventDestinationControl from './event-destination-control';\nimport EventDestination from './event-destination';\n\nimport {createElement} from '../render';\nimport {\n  destinationDescription as description,\n  destinationGallery as gallery,\n  extraServices as services\n} from '../mocks';\n\nconst getFormCreatingTemplate = () => `\n  <li class=\"trip-events__item\">\n    <form class=\"event event--edit\" action=\"#\" method=\"post\">\n    <header class=\"event__header\">\n\n      ${new EventTypes().getTemplate()}\n\n      ${new EventDestinationControl().getTemplate()}\n\n      <div class=\"event__field-group  event__field-group--time\">\n        <label class=\"visually-hidden\" for=\"event-start-time-1\">From</label>\n        <input class=\"event__input  event__input--time\" id=\"event-start-time-1\" type=\"text\" name=\"event-start-time\" value=\"19/03/19 00:00\">\n        &mdash;\n        <label class=\"visually-hidden\" for=\"event-end-time-1\">To</label>\n        <input class=\"event__input  event__input--time\" id=\"event-end-time-1\" type=\"text\" name=\"event-end-time\" value=\"19/03/19 00:00\">\n      </div>\n\n      <div class=\"event__field-group  event__field-group--price\">\n        <label class=\"event__label\" for=\"event-price-1\">\n          <span class=\"visually-hidden\">Price</span>\n          &euro;\n        </label>\n        <input class=\"event__input  event__input--price\" id=\"event-price-1\" type=\"text\" name=\"event-price\" value=\"\">\n      </div>\n\n      <button class=\"event__save-btn  btn  btn--blue\" type=\"submit\">Save</button>\n      <button class=\"event__reset-btn\" type=\"reset\">Cancel</button>\n    </header>\n    <section class=\"event__details\">\n\n        ${new EventOffers({services}).getTemplate()}\n\n        ${new EventDestination({description, gallery}).getTemplate()}\n\n    </section>\n  </form>\n  </li>\n`;\n\nexport default class FormCreating {\n  getTemplate() {\n    return getFormCreatingTemplate();\n  }\n\n  getElement() {\n    if (!this.elem) {\n      this.elem = createElement(this.getTemplate());\n    }\n    return this.elem;\n  }\n\n  removeElement() {\n    this.elem = null;\n  }\n}\n","import EventTypes from './event-types';\nimport EventOffers from './event-offers';\nimport EventDestinationControl from './event-destination-control';\nimport EventDestination from './event-destination';\n\nimport {createElement} from '../render';\nimport {\n  destinationDescription as description,\n  extraServices as services\n} from '../mocks';\n\nconst getFormEditingTemplate = () => `\n  <li class=\"trip-events__item\">\n    <form class=\"event event--edit\" action=\"#\" method=\"post\">\n      <header class=\"event__header\">\n\n        ${new EventTypes().getTemplate()}\n\n        ${new EventDestinationControl().getTemplate()}\n\n        <div class=\"event__field-group  event__field-group--time\">\n          <label class=\"visually-hidden\" for=\"event-start-time-1\">From</label>\n          <input class=\"event__input  event__input--time\" id=\"event-start-time-1\" type=\"text\" name=\"event-start-time\" value=\"18/03/19 12:25\">\n          &mdash;\n          <label class=\"visually-hidden\" for=\"event-end-time-1\">To</label>\n          <input class=\"event__input  event__input--time\" id=\"event-end-time-1\" type=\"text\" name=\"event-end-time\" value=\"18/03/19 13:35\">\n        </div>\n\n        <div class=\"event__field-group  event__field-group--price\">\n          <label class=\"event__label\" for=\"event-price-1\">\n            <span class=\"visually-hidden\">Price</span>\n            &euro;\n          </label>\n          <input class=\"event__input  event__input--price\" id=\"event-price-1\" type=\"text\" name=\"event-price\" value=\"160\">\n        </div>\n\n        <button class=\"event__save-btn  btn  btn--blue\" type=\"submit\">Save</button>\n        <button class=\"event__reset-btn\" type=\"reset\">Delete</button>\n        <button class=\"event__rollup-btn\" type=\"button\">\n          <span class=\"visually-hidden\">Open event</span>\n        </button>\n      </header>\n      <section class=\"event__details\">\n\n        ${new EventOffers({services}).getTemplate()}\n\n        ${new EventDestination({description}).getTemplate()}\n\n      </section>\n    </form>\n  </li>\n`;\n\nexport default class FormEditing {\n  getTemplate() {\n    return getFormEditingTemplate();\n  }\n\n  getElement() {\n    if (!this.elem) {\n      this.elem = createElement(this.getTemplate());\n    }\n    return this.elem;\n  }\n\n  removeElement() {\n    this.elem = null;\n  }\n}\n","import GeneralPresenter from './presenter/general-presenter';\n\nconst generalPresenter = new GeneralPresenter();\ngeneralPresenter.init();\n","import Filters from '../view/filters';\nimport Sorting from '../view/sorting';\nimport RoutePoint from '../view/route-point';\nimport RoutesList from '../view/routes-list';\nimport FormCreating from '../view/form-creating';\nimport FormEditing from '../view/form-editing';\n\nimport {render} from '../render';\n\nexport default class GeneralPresenter {\n  routesListInstance = new RoutesList();\n\n  constructor() {\n    this.filtersContainer = document.querySelector('.trip-controls__filters');\n    this.contentContainer = document.querySelector('.trip-events');\n  }\n\n  renderFilters() {\n    if (this.filtersContainer) {\n      render(new Filters(), this.filtersContainer);\n    }\n  }\n\n  renderSorting() {\n    if (this.contentContainer) {\n      render(new Sorting(), this.contentContainer);\n    }\n  }\n\n  renderFormCreating() {\n    if (this.contentContainer) {\n      render(new FormCreating(), this.routesListInstance.getElement());\n    }\n  }\n\n  renderFormEditing() {\n    if (this.contentContainer) {\n      render(new FormEditing(), this.routesListInstance.getElement());\n    }\n  }\n\n  renderRoutes() {\n    if (this.contentContainer) {\n      for (let i = 0; i < 3; i++) {\n        render(new RoutePoint(), this.routesListInstance.getElement());\n      }\n    }\n  }\n\n  renderContent() {\n    if (this.contentContainer) {\n      render(this.routesListInstance, this.contentContainer);\n\n      this.renderFormEditing();\n      this.renderFormCreating();\n      this.renderRoutes();\n    }\n  }\n\n  init() {\n    this.renderFilters();\n    this.renderSorting();\n    this.renderContent();\n  }\n}\n"],"names":["createElement","template","newElement","document","innerHTML","firstElementChild","render","component","container","place","insertAdjacentElement","getElement","FILTER_TYPES","value","isChecked","SORTING_TYPES","isActive","title","EVENT_TYPES","DESTINATION_POINTS","getWordWithCapitalLetter","word","charAt","toUpperCase","slice","Filters","getTemplate","map","type","getFiltersItemTemplate","join","this","elem","removeElement","Sorting","getSortingItemTemplate","RoutePoint","RoutesList","element","EventTypes","getEventsTypesItemTemplate","EventOffers","constructor","services","service","getEventOffersItemTemplate","price","EventDestinationControl","point","getDestinationOptionTemplate","EventDestination","description","gallery","length","src","alt","getEventDestinationTemplate","destinationGallery","extraServices","destinationDescription","FormCreating","FormEditing","routesListInstance","filtersContainer","querySelector","contentContainer","renderFilters","renderSorting","renderFormCreating","renderFormEditing","renderRoutes","i","renderContent","init"],"sourceRoot":""}